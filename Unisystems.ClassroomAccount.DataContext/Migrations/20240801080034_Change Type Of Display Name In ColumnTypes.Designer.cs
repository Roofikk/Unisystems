// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Unisystems.ClassroomAccount.DataContext;

#nullable disable

namespace Unisystems.ClassroomAccount.DataContext.Migrations
{
    [DbContext(typeof(ClassroomContext))]
    [Migration("20240801080034_Change Type Of Display Name In ColumnTypes")]
    partial class ChangeTypeOfDisplayNameInColumnTypes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Unisystems.ClassroomAccount.DataContext.Entities.Building", b =>
                {
                    b.Property<int>("BuildingId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("Added")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("BuildingId");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_Building_Name");

                    b.ToTable("PartialBuildings", (string)null);
                });

            modelBuilder.Entity("Unisystems.ClassroomAccount.DataContext.Entities.Classroom", b =>
                {
                    b.Property<int>("ClassroomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClassroomId"));

                    b.Property<int>("BuildingId")
                        .HasColumnType("integer");

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<int>("Floor")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.Property<string>("RoomTypeId")
                        .HasColumnType("varchar(24)");

                    b.HasKey("ClassroomId");

                    b.HasIndex("BuildingId");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_Classroom_Name");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Classrooms");
                });

            modelBuilder.Entity("Unisystems.ClassroomAccount.DataContext.Entities.Column", b =>
                {
                    b.Property<int>("ColumnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ColumnId"));

                    b.Property<string>("ColumnTypeId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.HasKey("ColumnId");

                    b.HasIndex("ColumnTypeId");

                    b.ToTable("Columns");
                });

            modelBuilder.Entity("Unisystems.ClassroomAccount.DataContext.Entities.ColumnType", b =>
                {
                    b.Property<string>("ColumnTypeId")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.HasKey("ColumnTypeId");

                    b.ToTable("ColumnTypes");
                });

            modelBuilder.Entity("Unisystems.ClassroomAccount.DataContext.Entities.ColumnValue", b =>
                {
                    b.Property<int>("ClassroomId")
                        .HasColumnType("integer");

                    b.Property<int>("ColumnId")
                        .HasColumnType("integer");

                    b.HasKey("ClassroomId", "ColumnId");

                    b.HasIndex("ColumnId");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("Unisystems.ClassroomAccount.DataContext.Entities.RoomType", b =>
                {
                    b.Property<string>("KeyName")
                        .HasColumnType("varchar(24)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.HasKey("KeyName");

                    b.ToTable("RoomTypes");
                });

            modelBuilder.Entity("Unisystems.ClassroomAccount.DataContext.Entities.DoubleColumnValue", b =>
                {
                    b.HasBaseType("Unisystems.ClassroomAccount.DataContext.Entities.ColumnValue");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.ToTable("DoubleColumnValues");
                });

            modelBuilder.Entity("Unisystems.ClassroomAccount.DataContext.Entities.IntColumnValue", b =>
                {
                    b.HasBaseType("Unisystems.ClassroomAccount.DataContext.Entities.ColumnValue");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.ToTable("IntColumnValues");
                });

            modelBuilder.Entity("Unisystems.ClassroomAccount.DataContext.Entities.TextAreaColumnValue", b =>
                {
                    b.HasBaseType("Unisystems.ClassroomAccount.DataContext.Entities.ColumnValue");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("TextAreaColumnValues");
                });

            modelBuilder.Entity("Unisystems.ClassroomAccount.DataContext.InputColumnValue", b =>
                {
                    b.HasBaseType("Unisystems.ClassroomAccount.DataContext.Entities.ColumnValue");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.ToTable("InputColumnValues");
                });

            modelBuilder.Entity("Unisystems.ClassroomAccount.DataContext.Entities.Classroom", b =>
                {
                    b.HasOne("Unisystems.ClassroomAccount.DataContext.Entities.Building", "Building")
                        .WithMany("Classrooms")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Unisystems.ClassroomAccount.DataContext.Entities.RoomType", "RoomType")
                        .WithMany("Classrooms")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Building");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Unisystems.ClassroomAccount.DataContext.Entities.Column", b =>
                {
                    b.HasOne("Unisystems.ClassroomAccount.DataContext.Entities.ColumnType", "ColumnType")
                        .WithMany("Columns")
                        .HasForeignKey("ColumnTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ColumnType");
                });

            modelBuilder.Entity("Unisystems.ClassroomAccount.DataContext.Entities.ColumnValue", b =>
                {
                    b.HasOne("Unisystems.ClassroomAccount.DataContext.Entities.Classroom", "Classroom")
                        .WithMany("ColumnValues")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Unisystems.ClassroomAccount.DataContext.Entities.Column", "Column")
                        .WithMany("ColumnValues")
                        .HasForeignKey("ColumnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classroom");

                    b.Navigation("Column");
                });

            modelBuilder.Entity("Unisystems.ClassroomAccount.DataContext.Entities.Building", b =>
                {
                    b.Navigation("Classrooms");
                });

            modelBuilder.Entity("Unisystems.ClassroomAccount.DataContext.Entities.Classroom", b =>
                {
                    b.Navigation("ColumnValues");
                });

            modelBuilder.Entity("Unisystems.ClassroomAccount.DataContext.Entities.Column", b =>
                {
                    b.Navigation("ColumnValues");
                });

            modelBuilder.Entity("Unisystems.ClassroomAccount.DataContext.Entities.ColumnType", b =>
                {
                    b.Navigation("Columns");
                });

            modelBuilder.Entity("Unisystems.ClassroomAccount.DataContext.Entities.RoomType", b =>
                {
                    b.Navigation("Classrooms");
                });
#pragma warning restore 612, 618
        }
    }
}
